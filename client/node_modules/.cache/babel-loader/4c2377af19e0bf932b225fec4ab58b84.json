{"ast":null,"code":"import { createSelector } from 'reselect'; // the middleman between mapStateToProps and the store. mapStateTpProps pulls from here instead of store. here pulls from the store. it is for casheing\n\nconst selectCart = state => state.cart; //input selector. selects a piece of whole state\n\n\nexport const selectCartItems = createSelector( //output selector. createSelector has to be used for casheing.\n[selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector( //when output selectors are summoned they send the information and cashe it.\n[selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["C:/Users/Karahan/Desktop/Yeni klasÃ¶r/React/crwn-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CAAyC;;AAEzC,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAAuC;;;AAEvC,OAAO,MAAMC,eAAe,GAAGJ,cAAc,EAAC;AAC1C,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,EAAC;AAC3C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE7CC,SAAD,IACIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAoCD,mBAAmB,GAAGC,QAAQ,CAACC,QAApF,EACA,CADA,CAH0C,CAA3C;AAOP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAExCC,SAAD,IACIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAoCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAAxG,EACA,CADA,CAHqC,CAAtC","sourcesContent":["import {createSelector} from 'reselect'; // the middleman between mapStateToProps and the store. mapStateTpProps pulls from here instead of store. here pulls from the store. it is for casheing\r\n\r\nconst selectCart = state => state.cart;//input selector. selects a piece of whole state\r\n\r\nexport const selectCartItems = createSelector(//output selector. createSelector has to be used for casheing.\r\n    [selectCart],\r\n    (cart) => cart.cartItems\r\n)\r\n\r\nexport const selectCartHidden = createSelector(//when output selectors are summoned they send the information and cashe it.\r\n    [selectCart],\r\n    cart => cart.hidden\r\n)\r\n\r\nexport const selectCartItemsCount = createSelector(\r\n    [selectCartItems],\r\n    (cartItems) => \r\n        cartItems.reduce((accumulatedQuantity, cartItem) => (accumulatedQuantity + cartItem.quantity), \r\n        0)\r\n)\r\n\r\nexport const selectCartTotal = createSelector(\r\n    [selectCartItems],\r\n    (cartItems) => \r\n        cartItems.reduce((accumulatedQuantity, cartItem) => (accumulatedQuantity + cartItem.quantity * cartItem.price), \r\n        0)\r\n)\r\n"]},"metadata":{},"sourceType":"module"}